{
  "version": 3,
  "sources": ["../../vuetify/src/components/VParallax/VParallax.tsx"],
  "sourcesContent": ["// Styles\nimport './VParallax.sass'\n\n// Components\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { useDisplay } from '@/composables'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { clamp, genericComponent, getScrollParent, useRender } from '@/util'\nimport { computed, onBeforeUnmount, ref, watch, watchEffect } from 'vue'\n\n// Types\nimport type { VImgSlots } from '../VImg/VImg'\n\nfunction floor (val: number) {\n  return Math.floor(Math.abs(val)) * Math.sign(val)\n}\n\nexport const VParallax = genericComponent<VImgSlots>()({\n  name: 'VParallax',\n\n  props: {\n    scale: {\n      type: [Number, String],\n      default: 0.5,\n    },\n  },\n\n  setup (props, { slots }) {\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n    const { resizeRef, contentRect } = useResizeObserver()\n    const { height: displayHeight } = useDisplay()\n\n    const root = ref<VImg>()\n\n    watchEffect(() => {\n      intersectionRef.value = resizeRef.value = root.value?.$el\n    })\n\n    let scrollParent: Element\n    watch(isIntersecting, val => {\n      if (val) {\n        scrollParent = getScrollParent(intersectionRef.value)\n        scrollParent = scrollParent === document.scrollingElement ? document as any : scrollParent\n        scrollParent.addEventListener('scroll', onScroll, { passive: true })\n        onScroll()\n      } else {\n        scrollParent.removeEventListener('scroll', onScroll)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      scrollParent?.removeEventListener('scroll', onScroll)\n    })\n\n    watch(displayHeight, onScroll)\n    watch(() => contentRect.value?.height, onScroll)\n\n    const scale = computed(() => {\n      return 1 - clamp(+props.scale)\n    })\n\n    let frame = -1\n    function onScroll () {\n      if (!isIntersecting.value) return\n\n      cancelAnimationFrame(frame)\n      frame = requestAnimationFrame(() => {\n        const el: HTMLElement | null = (root.value?.$el as Element).querySelector('.v-img__img')\n        if (!el) return\n\n        const scrollHeight = scrollParent.clientHeight ?? document.documentElement.clientHeight\n        const scrollPos = scrollParent.scrollTop ?? window.scrollY\n        const top = intersectionRef.value!.offsetTop\n        const height = contentRect.value!.height\n\n        const center = top + (height - scrollHeight) / 2\n        const translate = floor((scrollPos - center) * scale.value)\n        const sizeScale = Math.max(1, (scale.value * (scrollHeight - height) + height) / height)\n\n        el.style.setProperty('transform', `translateY(${translate}px) scale(${sizeScale})`)\n      })\n    }\n\n    useRender(() => (\n      <VImg\n        class={[\n          'v-parallax',\n          { 'v-parallax--active': isIntersecting.value },\n        ]}\n        ref={ root }\n        cover\n        onLoadstart={ onScroll }\n        onLoad={ onScroll }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VParallax = InstanceType<typeof VParallax>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAiBA,SAASA,MAAOC,KAAa;AAC3B,SAAOC,KAAKF,MAAME,KAAKC,IAAIF,GAAG,CAAC,IAAIC,KAAKE,KAAKH,GAAG;AAClD;AAEO,IAAMI,YAAYC,iBAAgB,EAAc;EACrDC,MAAM;EAENC,OAAO;IACLC,OAAO;MACLC,MAAM,CAACC,QAAQC,MAAM;MACrBC,SAAS;IACX;EACF;EAEAC,MAAON,OAAK,MAAa;AAAA,QAAX;MAAEO;IAAM,IAAC;AACrB,UAAM;MAAEC;MAAiBC;IAAe,IAAIC,wBAAuB;AACnE,UAAM;MAAEC;MAAWC;IAAY,IAAIC,kBAAiB;AACpD,UAAM;MAAEC,QAAQC;IAAc,IAAIC,WAAU;AAE5C,UAAMC,OAAOC,IAAG;AAEhBC,gBAAY,MAAM;;AAChBX,sBAAgBY,QAAQT,UAAUS,SAAQH,UAAKG,UAALH,mBAAYI;IACxD,CAAC;AAED,QAAIC;AACJC,UAAMd,gBAAgBhB,SAAO;AAC3B,UAAIA,KAAK;AACP6B,uBAAeE,gBAAgBhB,gBAAgBY,KAAK;AACpDE,uBAAeA,iBAAiBG,SAASC,mBAAmBD,WAAkBH;AAC9EA,qBAAaK,iBAAiB,UAAUC,UAAU;UAAEC,SAAS;QAAK,CAAC;AACnED,iBAAQ;MACV,OAAO;AACLN,qBAAaQ,oBAAoB,UAAUF,QAAQ;MACrD;IACF,CAAC;AAEDG,oBAAgB,MAAM;AACpBT,mDAAcQ,oBAAoB,UAAUF;IAC9C,CAAC;AAEDL,UAAMR,eAAea,QAAQ;AAC7BL,UAAM,MAAA;;AAAMX,+BAAYQ,UAAZR,mBAAmBE;OAAQc,QAAQ;AAE/C,UAAM3B,QAAQ+B,SAAS,MAAM;AAC3B,aAAO,IAAIC,MAAM,CAACjC,MAAMC,KAAK;IAC/B,CAAC;AAED,QAAIiC,QAAQ;AACZ,aAASN,WAAY;AACnB,UAAI,CAACnB,eAAeW;AAAO;AAE3Be,2BAAqBD,KAAK;AAC1BA,cAAQE,sBAAsB,MAAM;;AAClC,cAAMC,OAA0BpB,UAAKG,UAALH,mBAAYI,KAAgBiB,cAAc,aAAa;AACvF,YAAI,CAACD;AAAI;AAET,cAAME,gBAAejB,kBAAakB,iBAAblB,YAA6BG,SAASgB,gBAAgBD;AAC3E,cAAME,aAAYpB,kBAAaqB,cAAbrB,YAA0BsB,OAAOC;AACnD,cAAMC,MAAMtC,gBAAgBY,MAAO2B;AACnC,cAAMjC,SAASF,YAAYQ,MAAON;AAElC,cAAMkC,SAASF,OAAOhC,SAASyB,gBAAgB;AAC/C,cAAMU,YAAYzD,OAAOkD,YAAYM,UAAU/C,MAAMmB,KAAK;AAC1D,cAAM8B,YAAYxD,KAAKyD,IAAI,IAAIlD,MAAMmB,SAASmB,eAAezB,UAAUA,UAAUA,MAAM;AAEvFuB,WAAGe,MAAMC,YAAY,aAAc,cAAaJ,sBAAsBC,YAAY;MACpF,CAAC;IACH;AAEAI,cAAU,MAAA,YAAA,MAAA;MAAA,SAEC,CACL,cACA;QAAE,sBAAsB7C,eAAeW;MAAM,CAAC;MAC/C,OACKH;MAAI,SAAA;MAAA,eAEIW;MAAQ,UACbA;IAAQ,GACPrB,KAAK,CAElB;AAED,WAAO,CAAC;EACV;AACF,CAAC;",
  "names": ["floor", "val", "Math", "abs", "sign", "VParallax", "genericComponent", "name", "props", "scale", "type", "Number", "String", "default", "setup", "slots", "intersectionRef", "isIntersecting", "useIntersectionObserver", "resizeRef", "contentRect", "useResizeObserver", "height", "displayHeight", "useDisplay", "root", "ref", "watchEffect", "value", "$el", "scrollParent", "watch", "getScrollParent", "document", "scrollingElement", "addEventListener", "onScroll", "passive", "removeEventListener", "onBeforeUnmount", "computed", "clamp", "frame", "cancelAnimationFrame", "requestAnimationFrame", "el", "querySelector", "scrollHeight", "clientHeight", "documentElement", "scrollPos", "scrollTop", "window", "scrollY", "top", "offsetTop", "center", "translate", "sizeScale", "max", "style", "setProperty", "useRender"]
}
