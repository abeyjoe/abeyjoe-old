import {
  VAvatar
} from "./chunk-QYHZFAVF.js";
import {
  useDisplay
} from "./chunk-IOGNTETJ.js";
import {
  makeDensityProps,
  useDensity
} from "./chunk-47ZVFLP2.js";
import {
  VDefaultsProvider
} from "./chunk-TNVOCQAW.js";
import "./chunk-ZZGUZDMN.js";
import "./chunk-OXA6AW3A.js";
import {
  makePositionProps,
  usePosition
} from "./chunk-SA3VXXMV.js";
import {
  makeLocationProps,
  useLocation
} from "./chunk-JJR33DQW.js";
import {
  makeBorderProps,
  useBorder
} from "./chunk-UF4OEJLL.js";
import {
  makeElevationProps,
  useElevation
} from "./chunk-HSUK3LII.js";
import {
  makeRoundedProps,
  useRounded
} from "./chunk-CNA5NEYN.js";
import {
  makeDimensionProps,
  useDimension
} from "./chunk-6Y4ULV4Z.js";
import "./chunk-C2YUPJXX.js";
import "./chunk-6HT7FQ3V.js";
import "./chunk-LMLNWAEG.js";
import {
  IconValue
} from "./chunk-KHH3CP6A.js";
import "./chunk-RT56HV6Z.js";
import "./chunk-76WM6EDR.js";
import {
  makeThemeProps,
  provideTheme
} from "./chunk-6CG2HVRX.js";
import {
  makeTagProps
} from "./chunk-CFSNY7R7.js";
import {
  createSimpleFunctional,
  genericComponent,
  provideDefaults,
  useRender
} from "./chunk-TBUQR5R4.js";
import {
  createVNode,
  toRef
} from "./chunk-SE5EWVSA.js";
import "./chunk-RSJERJUL.js";

// node_modules/vuetify/lib/components/VBanner/VBanner.mjs
import "/home/oem/Desktop/abeyjoe/node_modules/vuetify/lib/components/VBanner/VBanner.css";

// node_modules/vuetify/lib/components/VBanner/VBannerActions.mjs
var VBannerActions = genericComponent()({
  name: "VBannerActions",
  props: {
    color: String,
    density: String
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    provideDefaults({
      VBtn: {
        color: props.color,
        density: props.density,
        variant: "text"
      }
    });
    useRender(() => {
      var _a;
      return createVNode("div", {
        "class": "v-banner-actions"
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
    });
    return {};
  }
});

// node_modules/vuetify/lib/components/VBanner/VBannerText.mjs
var VBannerText = createSimpleFunctional("v-banner-text");

// node_modules/vuetify/lib/components/VBanner/VBanner.mjs
var VBanner = genericComponent()({
  name: "VBanner",
  props: {
    avatar: String,
    color: String,
    icon: IconValue,
    lines: String,
    stacked: Boolean,
    sticky: Boolean,
    text: String,
    ...makeBorderProps(),
    ...makeDensityProps(),
    ...makeDimensionProps(),
    ...makeElevationProps(),
    ...makeLocationProps(),
    ...makePositionProps(),
    ...makeRoundedProps(),
    ...makeTagProps(),
    ...makeThemeProps()
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const {
      borderClasses
    } = useBorder(props);
    const {
      densityClasses
    } = useDensity(props);
    const {
      mobile
    } = useDisplay();
    const {
      dimensionStyles
    } = useDimension(props);
    const {
      elevationClasses
    } = useElevation(props);
    const {
      locationStyles
    } = useLocation(props);
    const {
      positionClasses
    } = usePosition(props);
    const {
      roundedClasses
    } = useRounded(props);
    const {
      themeClasses
    } = provideTheme(props);
    const color = toRef(props, "color");
    const density = toRef(props, "density");
    provideDefaults({
      VBannerActions: {
        color,
        density
      }
    });
    useRender(() => {
      const hasText = !!(props.text || slots.text);
      const hasPrepend = !!(slots.prepend || props.avatar || props.icon);
      return createVNode(props.tag, {
        "class": ["v-banner", {
          "v-banner--stacked": props.stacked || mobile.value,
          "v-banner--sticky": props.sticky,
          [`v-banner--${props.lines}-line`]: !!props.lines
        }, borderClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, themeClasses.value],
        "style": [dimensionStyles.value, locationStyles.value],
        "role": "banner"
      }, {
        default: () => {
          var _a;
          return [hasPrepend && createVNode(VDefaultsProvider, {
            "key": "prepend",
            "defaults": {
              VAvatar: {
                color: color.value,
                density: density.value,
                icon: props.icon,
                image: props.avatar
              }
            }
          }, {
            default: () => [createVNode("div", {
              "class": "v-banner__prepend"
            }, [slots.prepend ? slots.prepend() : (props.avatar || props.icon) && createVNode(VAvatar, null, null)])]
          }), createVNode("div", {
            "class": "v-banner__content"
          }, [hasText && createVNode(VBannerText, {
            "key": "text"
          }, {
            default: () => [slots.text ? slots.text() : props.text]
          }), (_a = slots.default) == null ? void 0 : _a.call(slots)]), slots.actions && createVNode(VBannerActions, null, {
            default: () => [slots.actions()]
          })];
        }
      });
    });
  }
});
export {
  VBanner,
  VBannerActions,
  VBannerText
};
//# sourceMappingURL=vuetify_lib_components_VBanner_index__mjs.js.map
